---
- name: Generate kubeadm join command for Master node
  hosts: k8s_node
  become: yes
  tasks:
    - name: Enabling kubelet
      service:
        name: kubelet
        state: started
        enabled: yes

    - name: Pull kubeadm config images
      command: "kubeadm config images pull"


    - name: Initialize Kubernetes master node
      shell: "kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
      register: rslt
      ignore_errors: yes

    - pause:
         prompt: "Validate kubeadm init"

    - name: Store init output
      action: copy content="{{ rslt.stdout }}" dest="/etc/kubernetes/kubeadm-init.stdout"

    - name: Check if /etc/kubernetes directory exists
      stat:
        path: /etc/kubernetes
      register: kubernetes_dir

    - name: Print status message based on directory existence
      debug:
        msg: "/etc/kubernetes folder {{ 'exists' if kubernetes_dir.stat.exists else 'does not exist' }}."

    - name: Check if Kubernetes is already initialized (kube-apiserver)
      stat:
        path: /etc/kubernetes/manifests/kube-apiserver.yaml
      register: k8s_initialized

    - name: Create .kube folder
      file:
          path: "/home/ansible-user/.kube"
          state: directory
          owner: /home/ansible-user/


    - name: Copy admin.conf to .kube folder
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ansible-user//.kube/config
        owner: /home/ansible-user/
        remote_src: yes

    - name: Create .kube folder
      file:
        path: "/root/.kube"
        state: directory
        owner: "root"

    - name: Copy admin.conf to .kube folder
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/root/.kube/config"
        owner: "root"
        remote_src: yes

    - name: Change ownership and permissions of config file on Ubuntu
      file:
        path: /home/ansible-user/.kube/config
        owner: ansible-user
        group: ansible-user
        mode: "0644"
      when: kubeconfig_stat.stat.exists and kubeconfig_stat.stat.pw_name != 'ansible-user'

    - name: Setup kubectl on bastion
      import_role:
        name: package
      when: ansible_host == "13.232.120.39"

    - name: Import Calico Networking role
      import_role:
        name: calico-networking
    #   import_role:
    #     name: <role_name_here>

#    - name: Import Calico Networking role
#      import_role:
#        name: calico-networking
