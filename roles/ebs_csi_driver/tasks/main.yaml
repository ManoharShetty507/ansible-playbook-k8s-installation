# Ensure that kubectl is installed
- name: Ensure that kubectl is installed
  command: "which kubectl"
  register: kubectl_check
  changed_when: False
  failed_when: kubectl_check.rc != 0


# Check if the EBS CSI driver was applied successfully
- name: Check EBS CSI Driver installation result
  debug:
    msg: "{{ kubectl_apply_output.stdout | default('No output available') }}"
  when: kubectl_apply_output is defined and kubectl_apply_output.rc == 0

# Debug EBS CSI driver installation error
- name: Debug EBS CSI driver installation error
  debug:
    msg: "{{ kubectl_apply_output.stderr | default('No error output available') }}"
  when: kubectl_apply_output is defined and kubectl_apply_output.rc != 0

# Check if StorageClass gp2 exists
- name: Check if StorageClass gp2 exists
  command: "kubectl get storageclass gp2"
  register: storageclass_check
  environment:
    KUBECONFIG: /home/ansible-user/.kube/config
  failed_when: storageclass_check.rc not in [0, 1]
  changed_when: False

# Create and apply StorageClass if it does not exist
- name: Create and apply StorageClass if it does not exist
  template:
    src: /home/ansible-user/ansible-playbook-k8s-installation/roles/ebs_csi_driver/templates/storageclass.yaml.j2
    dest: /tmp/storageclass.yaml
  when: storageclass_check.rc == 1
  environment:
    KUBECONFIG: /home/ansible-user/.kube/config

- name: Apply StorageClass if it does not exist
  command: "kubectl apply -f /tmp/storageclass.yaml"
  environment:
    KUBECONFIG: /home/ansible-user/.kube/config
  when: storageclass_check.rc == 1

# Check if PersistentVolumeClaim ebs-pvc exists
- name: Check if PersistentVolumeClaim ebs-pvc exists
                                                                                                                                 1,34          Top
