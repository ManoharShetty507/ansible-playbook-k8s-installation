---
- name: Install AWS Cloud Controller Manager
  hosts: bastion
  become: true
  tasks:

    - name: Ensure that git is installed
      ansible.builtin.package:
        name: git
        state: present

    - name: Ensure that kubectl is installed
      command: "which kubectl"
      register: kubectl_check
      changed_when: False
      failed_when: kubectl_check.rc != 0

    - name: Clone the AWS Cloud Controller Manager repository
      ansible.builtin.git:
        repo: https://github.com/kubernetes/cloud-provider-aws.git
        dest: /tmp/cloud-provider-aws
        version: master
        force: yes

    - name: Delete existing AWS Cloud Controller Manager resources
      ansible.builtin.command:
        cmd: "kubectl delete -k ."
      args:
        chdir: /tmp/cloud-provider-aws/examples/existing-cluster/base
      environment:
        KUBECONFIG: /home/ansible-user/.kube/config
      ignore_errors: yes  # Continue even if some resources do not exist

    - name: Apply AWS Cloud Controller Manager manifests
      ansible.builtin.command:
        cmd: "kubectl apply -k . --validate=false"
      args:
        chdir: /tmp/cloud-provider-aws/examples/existing-cluster/base
      environment:
        KUBECONFIG: /home/ansible-user/.kube/config

    - name: Check if AWS Cloud Controller Manager pods are running
      command: "kubectl get pods -n kube-system -l app=aws-cloud-controller-manager"
      register: ccm_check
      until: ccm_check.rc == 0
      retries: 5
      delay: 30
      environment:
        KUBECONFIG: /home/ansible-user/.kube/config

    - name: Debug Cloud Controller Manager installation result
      ansible.builtin.debug:
        var: ccm_check.stdout
